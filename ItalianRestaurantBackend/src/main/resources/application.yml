spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/italian_restaurant
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: validate
  flyway:
    baseline-on-migrate: true
    locations: classpath:db/migration
    user: postgres
    password: postgres
  mail:
    host: smtp.gmail.com
    port: 587
    username: myapplic256@gmail.com
    password: oezlfcuimxrmjaai
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 531274359208-00pdo418t6gff50e35pivcel5tu8lkb0.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 1583546558794561
            clientSecret: f4a0746b10f77eb1b1dcc866e98c6ed8
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: Iv1.0841fdf8ebb3b002
            clientSecret: a74d957c55433dfbb7d5a13f437d74365150cf67
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  security:
    jwt:
      tokenSecret: 50645367556B58703273357638792F423F4528482B4D6251655468576D597133
      tokenExpirationMsec: 300000
    cors:
      allowedOrigins: http://localhost:4200
    oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:4200/oauth2/redirect
        - myandroidapp://oauth2/redirect
        - myiosapp://oauth2/redirect

  front-url: http://localhost:4200

server:
  error:
    include-message: always
